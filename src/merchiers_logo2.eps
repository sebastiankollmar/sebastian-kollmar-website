%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(TM) 3.2%%AI8_CreatorVersion: 15.0.2%%For: (A-C) ()%%Title: (Merchiers Consulting Logo_03.eps)%%CreationDate: 23.08.17 09:01%%Canvassize: 16383%%BoundingBox: -46 -81 162 -49%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0%%+ procset Adobe_cmykcolor 1.1 0%%+ procset Adobe_cshow 1.1 0%%+ procset Adobe_customcolor 1.0 0%%+ procset Adobe_pattern_AI3 1.0 0%%+ procset Adobe_Illustrator_AI3 1.0 1%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI3_TemplateBox: 57.8486 -64.7158 57.8486 -64.7158%AI3_TileBox: -345.7021 -343.7354 437.2979 215.2646%AI3_DocumentPreview: Header%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%%EndComments%%BeginProlog%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 0
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
	} ifelse
} def
/terminate
{
} def
/packedarray
{
array astore readonly
} def
/setpacking
{
pop
} def
/currentpacking
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cmykcolor 1.1 0
%%Title: (CMYK Color Operators)
%%Version: 1.1 0
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
 end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_cmykcolor eq
	{
 end
	} if
} def
/setcmykcolor
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 0
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
 end
	} ifelse
} def
/terminate
{
} def
/cshow
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 0
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_customcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_customcolor eq
	{
 end
	} if
} def
/findcmykcustomcolor
{
5 packedarray
}  def
/setcustomcolor
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (7/21/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_pattern_AI3 16 dict dup begin put
/initialize
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern_AI3 begin
	Adobe_pattern_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			exit
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate
{
currentdict Adobe_pattern_AI3 eq
	{
 end
	} if
} def
errordict
/nocurrentpoint
{
pop
stop
} put
errordict
/invalidaccess
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar
	{
	exch
 begin
	/setstrokeadjust where {pop true setstrokeadjust} if
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
 end
 end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit
{
cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	2 npop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{2 npop}
			{3 npop true}
			{7 npop true}
			{pop true}
			pathforall
			} stopped
			{
			5 npop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		2 npop
		}
		{
		4 npop
		} ifelse
	} if
end
} def
/patternclip
{
clip
} def
/patternstrokepath
{
strokepath
} def
/patternmatrix
matrix def
/patternfill
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern_AI3 /patternpath get exec
grestore
newpath
} def
/patternstroke
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern_AI3 /patternfill get exec
			} pathforall
		3 npop
		} stopped
			{
			5 npop
			patternclip
			Adobe_pattern_AI3 /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern_AI3 /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow
{
3 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 4 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	6 index 6 index 6 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
5 npop
} def
/patternawidthshow
{
6 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 7 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put 
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	9 index 9 index 9 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
8 npop
} def
/patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/patternawidthshowstroke
{
7 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 8 1 roll
	} if
7 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	7 index setmatrix
	10 index 10 index 10 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
9 npop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI3 71 dict dup begin put
/initialize
{
userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3_vars begin
newpath
} def
/terminate
{
end
end
} def
/_
null def
/ddef
{
Adobe_Illustrator_AI3_vars 3 1 roll put
} def
/xput
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop
{
	{
	pop
	} repeat
} def
/sw
{
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
} def
/swj
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp
{
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c
	{
	curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	lineto
	} def
	/L
	/l load def
	/m
	{
	moveto
	} def
	}
	{
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	} ifelse
/d
{
setdash
} def
/cf	{} def
/i
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j
{
setlinejoin
} def
/J
{
setlinecap
} def
/M
{
setmiterlimit
} def
/w
{
setlinewidth
} def
/H
{} def
/h
{
closepath
} def
/N
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n
{N} def
/F
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f
{
closepath
F
} def
/S
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s
{
closepath
S
} def
/B
{
_pola 0 eq 
	{
	_doClip 1 eq
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b
{
closepath
B
} def
/W
{
/_doClip 1 ddef
} def
/*
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u
{} def
/U
{} def
/q
{
_pola 0 eq {gsave} if
} def
/Q
{
_pola 0 eq {grestore} if
} def
/*u
{
_pola 1 add /_pola exch ddef
} def
/*U
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D
{pop} def
/*w
{} def
/*W
{} def
/`
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
/setstrokeadjust where {pop false setstrokeadjust} if
newpath
0 setgray
false setoverprint
} def
/~
{
end
_i restore
} def
/@
{} def
/&
{} def
/O
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/dp
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			9 copy 6 npop patternashow
			}
			{
			pop
			6 copy 3 npop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
%3 npop newpath
sw rmoveto
} ddef
/_pjsf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			12 copy 6 npop patternawidthshow
			}
			{
			pop 9 copy 3 npop awidthshow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
swj rmoveto
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			10 copy 6 npop patternashowstroke
			}
			{
			pop 7 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop sw rmoveto
} ddef
/_pjss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			13 copy 6 npop patternawidthshowstroke
			}
			{
			pop 10 copy 3 npop jss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop swj rmoveto
} ddef
/_lp /none ddef
} def
/A
{
pop
} def
/nc 3 dict def
nc begin
/setgray
{
pop
} bind def
/setcmykcolor
{
4 npop
} bind def
/setcustomcolor
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
/annotatepage
{
} def
%%EndResource
%%EndProlog%%BeginSetupAdobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_pattern_AI3 /initialize get exec
Adobe_Illustrator_AI3 /initialize get exec
%AI3_BeginPattern: (Lagune)(Lagune) 0 3.1914 84.1563 84.791 [%AI3_Tile(0 O 0 R 0 1 1 0 k 0 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d42.0781 30.3906 m12.2227 12.8779 9.0488 12.4082 V7.2871 14.1709 0 30.3906 Y13.1641 20.5186 29.1484 23.3389 42.0781 30.3906 Cf42.0781 57.5908 m12.2227 40.0781 9.0488 39.6094 V7.2871 41.3711 0 57.5908 Y13.1641 47.7178 29.1484 50.5391 42.0781 57.5908 Cf42.0781 84.791 m12.2227 67.2773 9.0488 66.8096 V7.2871 68.5703 0 84.791 Y13.1641 74.918 29.1484 77.7402 42.0781 84.791 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.6 0.9 0.000031 0.000031 k 0.6 0.9 0.000031 0.000031 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d84.1563 30.3906 m54.3008 12.8779 51.127 12.4082 V49.3652 14.1709 42.0781 30.3906 Y55.2422 20.5186 71.2266 23.3389 84.1563 30.3906 Cf84.1563 57.5908 m54.3008 40.0781 51.127 39.6094 V49.3652 41.3711 42.0781 57.5908 Y55.2422 47.7178 71.2266 50.5391 84.1563 57.5908 Cf84.1563 84.791 m54.3008 67.2773 51.127 66.8096 V49.3652 68.5703 42.0781 84.791 Y55.2422 74.918 71.2266 77.7402 84.1563 84.791 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.85 0.1 1 0 k 0.85 0.1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d21.0391 33.582 m19.2773 33.582 17.8477 32.1523 17.8477 30.3906 c17.8477 28.6289 19.2773 27.2002 21.0391 27.2002 c22.8008 27.2002 24.2285 28.6289 24.2285 30.3906 c24.2285 32.1523 22.8008 33.582 21.0391 33.582 cf21.0391 6.3818 m19.2773 6.3818 17.8477 4.9531 17.8477 3.1914 c17.8477 1.4287 19.2773 0 21.0391 0 c22.8008 0 24.2285 1.4287 24.2285 3.1914 c24.2285 4.9531 22.8008 6.3818 21.0391 6.3818 cf21.0391 60.7822 m19.2773 60.7822 17.8477 59.3525 17.8477 57.5908 c17.8477 55.8291 19.2773 54.3994 21.0391 54.3994 c22.8008 54.3994 24.2285 55.8291 24.2285 57.5908 c24.2285 59.3525 22.8008 60.7822 21.0391 60.7822 cf21.0391 87.9824 m19.2773 87.9824 17.8477 86.5547 17.8477 84.791 c17.8477 83.0283 19.2773 81.5996 21.0391 81.5996 c22.8008 81.5996 24.2285 83.0283 24.2285 84.791 c24.2285 86.5547 22.8008 87.9824 21.0391 87.9824 cf63.1172 33.582 m61.3555 33.582 59.9258 32.1523 59.9258 30.3906 c59.9258 28.6289 61.3555 27.2002 63.1172 27.2002 c64.8789 27.2002 66.3066 28.6289 66.3066 30.3906 c66.3066 32.1523 64.8789 33.582 63.1172 33.582 cf63.1172 6.3818 m61.3555 6.3818 59.9258 4.9531 59.9258 3.1914 c59.9258 1.4287 61.3555 0 63.1172 0 c64.8789 0 66.3066 1.4287 66.3066 3.1914 c66.3066 4.9531 64.8789 6.3818 63.1172 6.3818 cf63.1172 60.7822 m61.3555 60.7822 59.9258 59.3525 59.9258 57.5908 c59.9258 55.8291 61.3555 54.3994 63.1172 54.3994 c64.8789 54.3994 66.3066 55.8291 66.3066 57.5908 c66.3066 59.3525 64.8789 60.7822 63.1172 60.7822 cf63.1172 87.9824 m61.3555 87.9824 59.9258 86.5547 59.9258 84.791 c59.9258 83.0283 61.3555 81.5996 63.1172 81.5996 c64.8789 81.5996 66.3066 83.0283 66.3066 84.791 c66.3066 86.5547 64.8789 87.9824 63.1172 87.9824 cf%AI6_EndPatternLayer) &(0 O 0 R 0.6 0.9 0.000031 0.000031 k 0.6 0.9 0.000031 0.000031 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 3.1914 m29.8535 20.7041 33.0273 21.1738 V34.79 19.4111 42.0781 3.1914 Y28.9141 13.0645 12.9277 10.2422 0 3.1914 Cf0 30.3906 m29.8535 47.9033 33.0273 48.374 V34.79 46.6104 42.0781 30.3906 Y28.9141 40.2646 12.9277 37.4434 0 30.3906 Cf0 57.5908 m29.8535 75.1035 33.0273 75.5752 V34.79 73.8105 42.0781 57.5908 Y28.9141 67.4648 12.9277 64.6436 0 57.5908 Cf%AI6_EndPatternLayer) &(0 O 0 R 0 1 1 0 k 0 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d42.0781 3.1914 m71.9316 20.7041 75.1055 21.1738 V76.8691 19.4111 84.1563 3.1914 Y70.9922 13.0645 55.0059 10.2422 42.0781 3.1914 Cf42.0781 30.3906 m71.9316 47.9033 75.1055 48.374 V76.8691 46.6104 84.1563 30.3906 Y70.9922 40.2646 55.0059 37.4434 42.0781 30.3906 Cf42.0781 57.5908 m71.9316 75.1035 75.1055 75.5752 V76.8691 73.8105 84.1563 57.5908 Y70.9922 67.4648 55.0059 64.6436 42.0781 57.5908 Cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%%EndSetup0 Au*u0 O0.839963 0.631769 0.292424 0.137057 k0 J 0 j 1 w 10 M []0 d-34.4878 -62.0283 m-34.4878 -51.5898 L-39.248 -59.7334 L-39.792 -59.7334 L-44.5518 -51.5898 L-44.5518 -62.0283 L-45.4189 -62.0283 L-45.4189 -49.958 L-44.5518 -49.958 L-39.52 -58.5947 L-34.4878 -49.958 L-33.6211 -49.958 L-33.6211 -62.0283 l-34.4878 -62.0283 Lf*U*u-22.418 -61.2461 m-22.418 -62.0283 L-30.459 -62.0283 L-30.459 -49.958 L-22.5708 -49.958 L-22.5708 -50.7402 L-29.5918 -50.7402 L-29.5918 -55.4834 L-23.4551 -55.4834 L-23.4551 -56.2314 L-29.5918 -56.2314 L-29.5918 -61.2461 l-22.418 -61.2461 Lf*U*u-20.0552 -62.0283 m-20.0552 -49.958 L-15.04 -49.958 L-14.5303 -49.958 -14.0601 -50.0664 -13.6294 -50.2813 c-13.1987 -50.4971 -12.8276 -50.7832 -12.5156 -51.1396 c-12.2041 -51.4971 -11.9604 -51.8994 -11.7847 -52.3467 c-11.6094 -52.7949 -11.521 -53.2451 -11.521 -53.6982 c-11.521 -54.1406 -11.5894 -54.5684 -11.7251 -54.9814 c-11.8613 -55.3955 -12.0542 -55.7666 -12.3032 -56.0957 c-12.5527 -56.4238 -12.853 -56.6963 -13.2041 -56.9111 c-13.5557 -57.127 -13.9409 -57.2686 -14.3604 -57.3359 c-11.3511 -62.0283 L-12.354 -62.0283 L-15.2783 -57.4727 L-19.188 -57.4727 L-19.188 -62.0283 l-20.0552 -62.0283 Lf1 D-19.188 -56.6729 m-14.9551 -56.6729 L-14.5703 -56.6729 -14.2188 -56.5879 -13.9014 -56.418 c-13.584 -56.248 -13.312 -56.0244 -13.0854 -55.7471 c-12.8589 -55.4697 -12.6855 -55.1514 -12.5669 -54.7949 c-12.4478 -54.4375 -12.3882 -54.0723 -12.3882 -53.6982 c-12.3882 -53.3135 -12.459 -52.9414 -12.6006 -52.585 c-12.7427 -52.2275 -12.9351 -51.9131 -13.1787 -51.6416 c-13.4224 -51.3691 -13.7056 -51.1514 -14.0288 -50.9873 c-14.3516 -50.8223 -14.7002 -50.7402 -15.0742 -50.7402 c-19.188 -50.7402 l-19.188 -56.6729 Lf*U*u0 D-9.85547 -55.9082 m-9.85547 -55.1836 -9.72803 -54.4609 -9.47314 -53.7412 c-9.21777 -53.0215 -8.84717 -52.3779 -8.35938 -51.8115 c-7.87256 -51.2451 -7.27441 -50.7832 -6.56592 -50.4258 c-5.85791 -50.0684 -5.05029 -49.8906 -4.14355 -49.8906 c-3.06689 -49.8906 -2.14893 -50.1367 -1.38965 -50.6299 c-0.630371 -51.123 -0.063477 -51.7549 0.310547 -52.5254 c-0.40332 -52.9336 L-0.619141 -52.5146 -0.871094 -52.1631 -1.16016 -51.8789 c-1.44922 -51.5957 -1.76074 -51.3662 -2.09521 -51.1904 c-2.4292 -51.0156 -2.77783 -50.8877 -3.14063 -50.8086 c-3.50342 -50.7295 -3.86035 -50.6895 -4.21143 -50.6895 c-4.98242 -50.6895 -5.6626 -50.8457 -6.25146 -51.1572 c-6.84082 -51.4688 -7.33936 -51.874 -7.74756 -52.3721 c-8.15527 -52.8711 -8.46436 -53.4346 -8.67383 -54.0635 c-8.88379 -54.6924 -8.98828 -55.3252 -8.98828 -55.959 c-8.98828 -56.6729 -8.86377 -57.3535 -8.61475 -57.999 c-8.36523 -58.6455 -8.02539 -59.2148 -7.59473 -59.708 c-7.16406 -60.2012 -6.65381 -60.5947 -6.06445 -60.8896 c-5.47559 -61.1846 -4.84033 -61.3311 -4.16064 -61.3311 c-3.79785 -61.3311 -3.42383 -61.2861 -3.03857 -61.1953 c-2.65332 -61.1045 -2.28516 -60.9629 -1.93359 -60.7705 c-1.58252 -60.5781 -1.25342 -60.3311 -0.947754 -60.0313 c-0.641602 -59.7305 -0.386719 -59.376 -0.182617 -58.9688 c0.56543 -59.3252 L0.361328 -59.7783 0.083496 -60.1816 -0.267578 -60.5322 c-0.619141 -60.8838 -1.00977 -61.1787 -1.44043 -61.416 c-1.87158 -61.6543 -2.32764 -61.833 -2.80908 -61.9521 c-3.29102 -62.0713 -3.76416 -62.1299 -4.22852 -62.1299 c-5.05615 -62.1299 -5.8125 -61.9492 -6.49805 -61.5859 c-7.18408 -61.2236 -7.77588 -60.751 -8.27441 -60.167 c-8.77344 -59.583 -9.16162 -58.9199 -9.43896 -58.1777 c-9.7168 -57.4355 -9.85547 -56.6787 -9.85547 -55.9082 cf*U*u12.0566 -49.958 m12.0566 -62.0283 L11.1914 -62.0283 L11.1914 -56.248 L3.57471 -56.248 L3.57471 -62.0283 L2.70752 -62.0283 L2.70752 -49.958 L3.57471 -49.958 L3.57471 -55.4668 L11.1914 -55.4668 L11.1914 -49.958 l12.0566 -49.958 Lf*U*u15.2021 -62.0283 m15.2021 -49.958 L16.0693 -49.958 L16.0693 -62.0283 l15.2021 -62.0283 Lf*U*u27.2725 -61.2461 m27.2725 -62.0283 L19.2314 -62.0283 L19.2314 -49.958 L27.1191 -49.958 L27.1191 -50.7402 L20.0986 -50.7402 L20.0986 -55.4834 L26.2354 -55.4834 L26.2354 -56.2314 L20.0986 -56.2314 L20.0986 -61.2461 l27.2725 -61.2461 Lf*U*u29.6348 -62.0283 m29.6348 -49.958 L34.6494 -49.958 L35.1602 -49.958 35.6299 -50.0664 36.0605 -50.2813 c36.4912 -50.4971 36.8623 -50.7832 37.1738 -51.1396 c37.4854 -51.4971 37.7295 -51.8994 37.9053 -52.3467 c38.0811 -52.7949 38.1689 -53.2451 38.1689 -53.6982 c38.1689 -54.1406 38.1006 -54.5684 37.9648 -54.9814 c37.8291 -55.3955 37.6357 -55.7666 37.3867 -56.0957 c37.1377 -56.4238 36.8369 -56.6963 36.4854 -56.9111 c36.1348 -57.127 35.749 -57.2686 35.3301 -57.3359 c38.3389 -62.0283 L37.3359 -62.0283 L34.4121 -57.4727 L30.502 -57.4727 L30.502 -62.0283 l29.6348 -62.0283 Lf1 D30.502 -56.6729 m34.7344 -56.6729 L35.1201 -56.6729 35.4717 -56.5879 35.7891 -56.418 c36.1055 -56.248 36.3779 -56.0244 36.6045 -55.7471 c36.8311 -55.4697 37.0039 -55.1514 37.123 -54.7949 c37.2422 -54.4375 37.3018 -54.0723 37.3018 -53.6982 c37.3018 -53.3135 37.2305 -52.9414 37.0889 -52.585 c36.9473 -52.2275 36.7549 -51.9131 36.5107 -51.6416 c36.2676 -51.3691 35.9844 -51.1514 35.6611 -50.9873 c35.3379 -50.8223 34.9893 -50.7402 34.6152 -50.7402 c30.502 -50.7402 l30.502 -56.6729 Lf*U*u0 D47.6885 -51.9639 m46.9072 -51.0918 45.8018 -50.6553 44.374 -50.6553 c43.1953 -50.6553 42.3369 -50.8789 41.7988 -51.3271 c41.2598 -51.7744 40.9912 -52.3779 40.9912 -53.1377 c40.9912 -53.5225 41.0586 -53.8428 41.1953 -54.0977 c41.3311 -54.3525 41.543 -54.5713 41.832 -54.752 c42.1211 -54.9336 42.4873 -55.0869 42.9287 -55.2109 c43.3711 -55.3359 43.9033 -55.4668 44.5273 -55.6025 c45.1729 -55.7383 45.7598 -55.8887 46.2861 -56.0527 c46.8135 -56.2168 47.2607 -56.4238 47.6299 -56.6729 c47.998 -56.9229 48.2813 -57.2285 48.4795 -57.5918 c48.6777 -57.9541 48.7773 -58.4014 48.7773 -58.9346 c48.7773 -59.4668 48.6719 -59.9316 48.4629 -60.3281 c48.2529 -60.7256 47.958 -61.0566 47.5781 -61.3232 c47.1982 -61.5889 46.7451 -61.79 46.2188 -61.9268 c45.6914 -62.0625 45.1045 -62.1299 44.459 -62.1299 c42.5771 -62.1299 40.9854 -61.5293 39.6816 -60.3281 c40.1406 -59.6309 L40.6514 -60.1641 41.2744 -60.5859 42.0107 -60.8975 c42.7471 -61.21 43.5752 -61.3652 44.4932 -61.3652 c45.5469 -61.3652 46.3711 -61.1729 46.9668 -60.7871 c47.5615 -60.4023 47.8594 -59.8184 47.8594 -59.0361 c47.8594 -58.6396 47.7793 -58.3027 47.6211 -58.0244 c47.4619 -57.7471 47.2266 -57.5059 46.915 -57.3027 c46.6035 -57.0986 46.21 -56.9229 45.7344 -56.7754 c45.2578 -56.6279 44.7021 -56.4863 44.0684 -56.3506 c43.4219 -56.2139 42.8525 -56.0693 42.3594 -55.917 c41.8662 -55.7637 41.4521 -55.5713 41.1182 -55.3389 c40.7842 -55.1064 40.5322 -54.8262 40.3623 -54.4971 c40.1924 -54.1689 40.1064 -53.7549 40.1064 -53.2559 c40.1064 -52.7119 40.2119 -52.2305 40.4219 -51.8115 c40.6309 -51.3926 40.9229 -51.0381 41.2969 -50.749 c41.6709 -50.46 42.1182 -50.2422 42.6396 -50.0947 c43.1611 -49.9473 43.7393 -49.873 44.374 -49.873 c45.1563 -49.873 45.8525 -49.9893 46.4648 -50.2217 c47.0771 -50.4541 47.6318 -50.8086 48.1309 -51.2842 c47.6885 -51.9639 Lf*UUu*u54.4902 -55.9082 m54.4902 -55.1836 54.6182 -54.4609 54.873 -53.7412 c55.1279 -53.0215 55.499 -52.3779 55.9863 -51.8115 c56.4736 -51.2451 57.0713 -50.7832 57.7793 -50.4258 c58.4883 -50.0684 59.2949 -49.8906 60.2021 -49.8906 c61.2783 -49.8906 62.1963 -50.1367 62.9561 -50.6299 c63.7158 -51.123 64.2822 -51.7549 64.6563 -52.5254 c63.9424 -52.9336 L63.7266 -52.5146 63.4746 -52.1631 63.1855 -51.8789 c62.8965 -51.5957 62.585 -51.3662 62.251 -51.1904 c61.916 -51.0156 61.5674 -50.8877 61.2051 -50.8086 c60.8428 -50.7295 60.4854 -50.6895 60.1338 -50.6895 c59.3633 -50.6895 58.6836 -50.8457 58.0938 -51.1572 c57.5049 -51.4688 57.0059 -51.874 56.5986 -52.3721 c56.1904 -52.8711 55.8809 -53.4346 55.6719 -54.0635 c55.4619 -54.6924 55.3574 -55.3252 55.3574 -55.959 c55.3574 -56.6729 55.4814 -57.3535 55.7314 -57.999 c55.9805 -58.6455 56.3203 -59.2148 56.751 -59.708 c57.1816 -60.2012 57.6914 -60.5947 58.2813 -60.8896 c58.8701 -61.1846 59.5049 -61.3311 60.1855 -61.3311 c60.5479 -61.3311 60.9219 -61.2861 61.3076 -61.1953 c61.6924 -61.1045 62.0605 -60.9629 62.4121 -60.7705 c62.7637 -60.5781 63.0918 -60.3311 63.3984 -60.0313 c63.7041 -59.7305 63.959 -59.376 64.1631 -58.9688 c64.9111 -59.3252 L64.707 -59.7783 64.4297 -60.1816 64.0781 -60.5322 c63.7266 -60.8838 63.3359 -61.1787 62.9053 -61.416 c62.4746 -61.6543 62.0186 -61.833 61.5371 -61.9521 c61.0547 -62.0713 60.582 -62.1299 60.1172 -62.1299 c59.29 -62.1299 58.5332 -61.9492 57.8477 -61.5859 c57.1621 -61.2236 56.5693 -60.751 56.0713 -60.167 c55.5723 -59.583 55.1846 -58.9199 54.9063 -58.1777 c54.6289 -57.4355 54.4902 -56.6787 54.4902 -55.9082 cf*UUu*u71.7441 -62.1133 m70.9053 -62.1133 70.1406 -61.9375 69.4492 -61.5859 c68.7578 -61.2354 68.1631 -60.7764 67.6641 -60.209 c67.166 -59.6426 66.7803 -58.9912 66.5088 -58.2539 c66.2363 -57.5176 66.1006 -56.7646 66.1006 -55.9932 c66.1006 -55.1885 66.2451 -54.418 66.5342 -53.6816 c66.8232 -52.9443 67.2197 -52.293 67.7236 -51.7266 c68.2285 -51.1602 68.8262 -50.709 69.5176 -50.375 c70.209 -50.041 70.957 -49.873 71.7617 -49.873 c72.6006 -49.873 73.3682 -50.0518 74.0654 -50.4092 c74.7617 -50.7656 75.3574 -51.2334 75.8496 -51.8115 c76.3428 -52.3896 76.7256 -53.0439 76.9971 -53.7744 c77.2695 -54.5059 77.4053 -55.2451 77.4053 -55.9932 c77.4053 -56.8096 77.2607 -57.5859 76.9717 -58.3223 c76.6826 -59.0596 76.2861 -59.708 75.7822 -60.2686 c75.2773 -60.8301 74.6797 -61.2773 73.9883 -61.6123 c73.2969 -61.9463 72.5488 -62.1133 71.7441 -62.1133 cf1 D66.9678 -55.9932 m66.9678 -56.6846 67.084 -57.3506 67.3164 -57.9912 c67.5479 -58.6309 67.877 -59.1982 68.3018 -59.6904 c68.7266 -60.1836 69.2344 -60.5781 69.8232 -60.8721 c70.4131 -61.167 71.0586 -61.3145 71.7617 -61.3145 c72.4863 -61.3145 73.1416 -61.1611 73.7246 -60.8555 c74.3086 -60.5498 74.8076 -60.1445 75.2207 -59.6396 c75.6348 -59.1357 75.9551 -58.5664 76.1816 -57.9316 c76.4082 -57.2969 76.5215 -56.6504 76.5215 -55.9932 c76.5215 -55.3018 76.4023 -54.6367 76.1641 -53.9961 c75.9268 -53.3555 75.5947 -52.7891 75.1699 -52.2959 c74.7451 -51.8027 74.2432 -51.4092 73.666 -51.1143 c73.0879 -50.8193 72.4531 -50.6719 71.7617 -50.6719 c71.0361 -50.6719 70.3789 -50.8252 69.7891 -51.1309 c69.2002 -51.4375 68.6953 -51.8428 68.2764 -52.3467 c67.8574 -52.8516 67.5342 -53.4209 67.3076 -54.0557 c67.0811 -54.6904 66.9678 -55.3359 66.9678 -55.9932 cf*U*u0 D80.6016 -51.5898 m80.6016 -62.0283 L79.7344 -62.0283 L79.7344 -49.958 L80.3975 -49.958 L88.8633 -60.583 L88.8633 -49.958 L89.7305 -49.958 L89.7305 -62.0283 L88.9316 -62.0283 l80.6016 -51.5898 Lf*U*u99.8955 -51.9639 m99.1143 -51.0918 98.0088 -50.6553 96.5811 -50.6553 c95.4023 -50.6553 94.5439 -50.8789 94.0059 -51.3271 c93.4668 -51.7744 93.1982 -52.3779 93.1982 -53.1377 c93.1982 -53.5225 93.2656 -53.8428 93.4023 -54.0977 c93.5381 -54.3525 93.75 -54.5713 94.0391 -54.752 c94.3281 -54.9336 94.6943 -55.0869 95.1357 -55.2109 c95.5781 -55.3359 96.1104 -55.4668 96.7344 -55.6025 c97.3799 -55.7383 97.9668 -55.8887 98.4932 -56.0527 c99.0205 -56.2168 99.4678 -56.4238 99.8369 -56.6729 c100.2051 -56.9229 100.4883 -57.2285 100.6865 -57.5918 c100.8848 -57.9541 100.9844 -58.4014 100.9844 -58.9346 c100.9844 -59.4668 100.8789 -59.9316 100.6699 -60.3281 c100.46 -60.7256 100.165 -61.0566 99.7852 -61.3232 c99.4053 -61.5889 98.9521 -61.79 98.4258 -61.9268 c97.8984 -62.0625 97.3115 -62.1299 96.666 -62.1299 c94.7842 -62.1299 93.1924 -61.5293 91.8887 -60.3281 c92.3477 -59.6309 L92.8584 -60.1641 93.4814 -60.5859 94.2178 -60.8975 c94.9541 -61.21 95.7822 -61.3652 96.7002 -61.3652 c97.7539 -61.3652 98.5781 -61.1729 99.1738 -60.7871 c99.7686 -60.4023 100.0664 -59.8184 100.0664 -59.0361 c100.0664 -58.6396 99.9863 -58.3027 99.8281 -58.0244 c99.6689 -57.7471 99.4336 -57.5059 99.1221 -57.3027 c98.8105 -57.0986 98.417 -56.9229 97.9414 -56.7754 c97.4648 -56.6279 96.9092 -56.4863 96.2754 -56.3506 c95.6289 -56.2139 95.0596 -56.0693 94.5664 -55.917 c94.0732 -55.7637 93.6592 -55.5713 93.3252 -55.3389 c92.9912 -55.1064 92.7393 -54.8262 92.5693 -54.4971 c92.3994 -54.1689 92.3135 -53.7549 92.3135 -53.2559 c92.3135 -52.7119 92.4189 -52.2305 92.6289 -51.8115 c92.8379 -51.3926 93.1299 -51.0381 93.5039 -50.749 c93.8779 -50.46 94.3252 -50.2422 94.8467 -50.0947 c95.3682 -49.9473 95.9463 -49.873 96.5811 -49.873 c97.3633 -49.873 98.0596 -49.9893 98.6719 -50.2217 c99.2842 -50.4541 99.8389 -50.8086 100.3379 -51.2842 c99.8955 -51.9639 Lf*U*u108.0049 -61.3145 m108.8213 -61.3145 109.498 -61.1611 110.0361 -60.8555 c110.5752 -60.5498 111 -60.1475 111.3115 -59.6484 c111.623 -59.1494 111.8438 -58.583 111.9746 -57.9482 c112.1045 -57.3135 112.1699 -56.6729 112.1699 -56.0273 c112.1699 -49.958 L113.0371 -49.958 L113.0371 -56.0273 L113.0371 -56.832 112.9492 -57.6025 112.7734 -58.3389 c112.5977 -59.0762 112.3115 -59.7246 111.915 -60.2861 c111.5186 -60.8467 111.0029 -61.292 110.3682 -61.6201 c109.7334 -61.9492 108.9512 -62.1133 108.0225 -62.1133 c107.0586 -62.1133 106.2539 -61.9404 105.6084 -61.5947 c104.9619 -61.249 104.4434 -60.79 104.0527 -60.2178 c103.6611 -59.6455 103.3838 -58.9971 103.2197 -58.2715 c103.0557 -57.5459 102.9727 -56.7979 102.9727 -56.0273 c102.9727 -49.958 L103.8398 -49.958 L103.8398 -56.0273 L103.8398 -56.6963 103.9053 -57.3477 104.0352 -57.9824 c104.166 -58.6172 104.3926 -59.1807 104.7158 -59.6738 c105.0391 -60.167 105.4658 -60.5635 105.999 -60.8643 c106.5313 -61.1641 107.2002 -61.3145 108.0049 -61.3145 cf*U*u116.0127 -62.0283 m116.0127 -49.958 L116.8799 -49.958 L116.8799 -61.2461 L124.0879 -61.2461 L124.0879 -62.0283 l116.0127 -62.0283 Lf*U*u132.332 -50.7402 m127.9121 -50.7402 L127.9121 -62.0283 L127.0449 -62.0283 L127.0449 -50.7402 L122.625 -50.7402 L122.625 -49.958 L132.332 -49.958 l132.332 -50.7402 Lf*U*u134.2021 -62.0283 m134.2021 -49.958 L135.0693 -49.958 L135.0693 -62.0283 l134.2021 -62.0283 Lf*U*u139.0977 -51.5898 m139.0977 -62.0283 L138.2305 -62.0283 L138.2305 -49.958 L138.8936 -49.958 L147.3594 -60.583 L147.3594 -49.958 L148.2266 -49.958 L148.2266 -62.0283 L147.4277 -62.0283 l139.0977 -51.5898 Lf*U*u160.2627 -60.1416 m159.0957 -61.4561 157.7412 -62.1133 156.2002 -62.1133 c155.3838 -62.1133 154.6279 -61.9375 153.9307 -61.5859 c153.2334 -61.2354 152.6357 -60.7705 152.1367 -60.1924 c151.6377 -59.6143 151.2471 -58.957 150.9639 -58.2207 c150.6807 -57.4834 150.5391 -56.7354 150.5391 -55.9766 c150.5391 -55.1836 150.6777 -54.418 150.9551 -53.6816 c151.2334 -52.9443 151.6182 -52.293 152.1113 -51.7266 c152.6045 -51.1602 153.1914 -50.709 153.8711 -50.375 c154.5508 -50.041 155.293 -49.873 156.0977 -49.873 c156.6982 -49.873 157.2393 -49.9385 157.7217 -50.0684 c158.2031 -50.1992 158.6338 -50.3809 159.0137 -50.6133 c159.3936 -50.8457 159.7217 -51.123 160 -51.4463 c160.2773 -51.7686 160.5117 -52.123 160.7051 -52.5088 c159.9912 -52.9336 L159.583 -52.1406 159.042 -51.5645 158.3672 -51.208 c157.6934 -50.8506 156.9307 -50.6719 156.0811 -50.6719 c155.3672 -50.6719 154.7207 -50.8252 154.1426 -51.1309 c153.5654 -51.4375 153.0723 -51.8398 152.6641 -52.3379 c152.2559 -52.8369 151.9443 -53.4033 151.7295 -54.0381 c151.5137 -54.6729 151.4063 -55.3252 151.4063 -55.9932 c151.4063 -56.707 151.5303 -57.3848 151.7803 -58.0244 c152.0293 -58.665 152.3721 -59.2295 152.8086 -59.7168 c153.2451 -60.2041 153.7578 -60.5918 154.3467 -60.8809 c154.9365 -61.1699 155.5713 -61.3145 156.251 -61.3145 c156.9873 -61.3145 157.6875 -61.1445 158.3506 -60.8047 c159.0137 -60.4639 159.6514 -59.9258 160.2627 -59.1895 c160.2627 -56.8604 L157.5264 -56.8604 L157.5264 -56.1631 L161.0107 -56.1631 L161.0107 -62.0283 L160.2627 -62.0283 l160.2627 -60.1416 Lf*UUu*u-45.9307 -80.0283 m-45.9307 -71.8633 L-45.3442 -71.8633 L-45.3442 -80.0283 l-45.9307 -80.0283 Lf*U*u-42.6187 -72.9678 m-42.6187 -80.0283 L-43.2051 -80.0283 L-43.2051 -71.8633 L-42.7563 -71.8633 L-37.0293 -79.0508 L-37.0293 -71.8633 L-36.4429 -71.8633 L-36.4429 -80.0283 L-36.9834 -80.0283 l-42.6187 -72.9678 Lf*U*u-34.3159 -80.0283 m-34.3159 -71.8633 L-31.6016 -71.8633 L-30.9575 -71.8633 -30.3926 -71.9707 -29.9053 -72.1855 c-29.4189 -72.4004 -29.0142 -72.6914 -28.6924 -73.0596 c-28.3701 -73.4277 -28.1289 -73.8584 -27.9678 -74.3535 c-27.8066 -74.8477 -27.7261 -75.375 -27.7261 -75.9346 c-27.7261 -76.5557 -27.8164 -77.1172 -27.9966 -77.6191 c-28.1768 -78.1211 -28.4355 -78.5508 -28.7729 -78.9072 c-29.1104 -79.2637 -29.5186 -79.54 -29.9976 -79.7354 c-30.4766 -79.9307 -31.0117 -80.0283 -31.6016 -80.0283 c-34.3159 -80.0283 Lf1 D-28.313 -75.9346 m-28.313 -75.4209 -28.3857 -74.9473 -28.5313 -74.5137 c-28.6768 -74.0811 -28.8896 -73.707 -29.1694 -73.3926 c-29.4492 -73.0781 -29.7925 -72.833 -30.1987 -72.6572 c-30.605 -72.4805 -31.0728 -72.3926 -31.6016 -72.3926 c-33.7295 -72.3926 L-33.7295 -79.499 L-31.6016 -79.499 L-31.0654 -79.499 -30.5918 -79.4092 -30.1816 -79.2295 c-29.7715 -79.0488 -29.4282 -78.7979 -29.1523 -78.4756 c-28.8765 -78.1543 -28.6675 -77.7764 -28.5254 -77.3428 c-28.3838 -76.9102 -28.313 -76.4404 -28.313 -75.9346 cf*U*u0 D-22.8384 -79.5449 m-22.2866 -79.5449 -21.8286 -79.4414 -21.4644 -79.2344 c-21.1001 -79.0273 -20.813 -78.7559 -20.6016 -78.418 c-20.3911 -78.0811 -20.2417 -77.6982 -20.1533 -77.2686 c-20.0654 -76.8389 -20.021 -76.4063 -20.021 -75.9688 c-20.021 -71.8633 L-19.4346 -71.8633 L-19.4346 -75.9688 L-19.4346 -76.5137 -19.4941 -77.0342 -19.6128 -77.5332 c-19.7319 -78.0313 -19.9253 -78.4697 -20.1934 -78.8496 c-20.4619 -79.2295 -20.8105 -79.5303 -21.2402 -79.752 c-21.6694 -79.9746 -22.1987 -80.0859 -22.8271 -80.0859 c-23.479 -80.0859 -24.0229 -79.9688 -24.46 -79.7354 c-24.897 -79.501 -25.2476 -79.1904 -25.5122 -78.8037 c-25.7769 -78.417 -25.9648 -77.9775 -26.0757 -77.4873 c-26.187 -76.9961 -26.2427 -76.4902 -26.2427 -75.9688 c-26.2427 -71.8633 L-25.6563 -71.8633 L-25.6563 -75.9688 L-25.6563 -76.4209 -25.6118 -76.8623 -25.5239 -77.291 c-25.4355 -77.7207 -25.2822 -78.1025 -25.064 -78.4355 c-24.8452 -78.7695 -24.5562 -79.0371 -24.1953 -79.2402 c-23.8354 -79.4434 -23.3828 -79.5449 -22.8384 -79.5449 cf*U*u-12.6729 -73.2207 m-13.2017 -72.6299 -13.9492 -72.335 -14.915 -72.335 c-15.7129 -72.335 -16.2935 -72.4863 -16.6572 -72.7891 c-17.0215 -73.0918 -17.2036 -73.5 -17.2036 -74.0137 c-17.2036 -74.2744 -17.1577 -74.4912 -17.0659 -74.6631 c-16.9736 -74.8359 -16.8301 -74.9834 -16.6343 -75.1064 c-16.439 -75.2295 -16.1919 -75.333 -15.8926 -75.417 c-15.5938 -75.501 -15.2334 -75.5889 -14.8115 -75.6816 c-14.3745 -75.7734 -13.978 -75.875 -13.6216 -75.9863 c-13.2651 -76.0977 -12.9624 -76.2373 -12.7129 -76.4063 c-12.4639 -76.5742 -12.272 -76.7813 -12.1382 -77.0264 c-12.0039 -77.2725 -11.9365 -77.5752 -11.9365 -77.9355 c-11.9365 -78.2959 -12.0078 -78.6104 -12.1494 -78.8779 c-12.2915 -79.1465 -12.4907 -79.3711 -12.7476 -79.5508 c-13.0044 -79.7314 -13.311 -79.8672 -13.6675 -79.959 c-14.0239 -80.0518 -14.4209 -80.0977 -14.8579 -80.0977 c-16.1304 -80.0977 -17.2075 -79.6914 -18.0894 -78.8779 c-17.7788 -78.4072 L-17.4336 -78.7676 -17.0122 -79.0527 -16.5137 -79.2637 c-16.0156 -79.4746 -15.4556 -79.5801 -14.8345 -79.5801 c-14.1216 -79.5801 -13.564 -79.4492 -13.1616 -79.1885 c-12.7588 -78.9287 -12.5576 -78.5332 -12.5576 -78.0039 c-12.5576 -77.7363 -12.6113 -77.5078 -12.7188 -77.3203 c-12.8262 -77.1318 -12.9854 -76.9697 -13.1958 -76.8311 c-13.4067 -76.6934 -13.6733 -76.5742 -13.9951 -76.4746 c-14.3174 -76.375 -14.6929 -76.2793 -15.1221 -76.1875 c-15.5591 -76.0957 -15.9443 -75.998 -16.2778 -75.8945 c-16.6113 -75.791 -16.8916 -75.6602 -17.1177 -75.5029 c-17.3438 -75.3457 -17.5142 -75.1563 -17.6294 -74.9336 c-17.7441 -74.7119 -17.8018 -74.4316 -17.8018 -74.0947 c-17.8018 -73.7266 -17.731 -73.4004 -17.5889 -73.1172 c-17.4473 -72.833 -17.2495 -72.5938 -16.9966 -72.3984 c-16.7437 -72.2021 -16.4409 -72.0547 -16.0884 -71.9551 c-15.7358 -71.8555 -15.3447 -71.8057 -14.915 -71.8057 c-14.3862 -71.8057 -13.9146 -71.8848 -13.5005 -72.042 c-13.0869 -72.1992 -12.7109 -72.4385 -12.3735 -72.7607 c-12.6729 -73.2207 Lf*U*u-4.81836 -72.3926 m-7.80811 -72.3926 L-7.80811 -80.0283 L-8.39502 -80.0283 L-8.39502 -72.3926 L-11.3848 -72.3926 L-11.3848 -71.8633 L-4.81836 -71.8633 l-4.81836 -72.3926 Lf*U*u-3.55371 -80.0283 m-3.55371 -71.8633 L-0.161133 -71.8633 L0.184082 -71.8633 0.501953 -71.9365 0.793457 -72.082 c1.08496 -72.2275 1.33594 -72.4209 1.54688 -72.6621 c1.75732 -72.9043 1.92236 -73.1768 2.04102 -73.4795 c2.16016 -73.7822 2.21924 -74.0869 2.21924 -74.3936 c2.21924 -74.6924 2.17334 -74.9814 2.08154 -75.2617 c1.98926 -75.542 1.85889 -75.793 1.69043 -76.0146 c1.52148 -76.2373 1.31836 -76.4209 1.08105 -76.5664 c0.843262 -76.7129 0.58252 -76.8086 0.298828 -76.8545 c2.33447 -80.0283 L1.65576 -80.0283 L-0.322266 -76.9463 L-2.96729 -76.9463 L-2.96729 -80.0283 l-3.55371 -80.0283 Lf1 D-2.96729 -76.4063 m-0.103516 -76.4063 L0.157227 -76.4063 0.394531 -76.3486 0.609375 -76.2334 c0.824219 -76.1182 1.00781 -75.9668 1.16162 -75.7793 c1.31494 -75.5908 1.43164 -75.377 1.51221 -75.1348 c1.59277 -74.8936 1.63281 -74.6465 1.63281 -74.3936 c1.63281 -74.1328 1.58496 -73.8818 1.48926 -73.6396 c1.39307 -73.3984 1.26318 -73.1855 1.09814 -73.002 c0.933105 -72.8174 0.741699 -72.6699 0.523438 -72.5586 c0.304688 -72.4482 0.068848 -72.3926 -0.184082 -72.3926 c-2.96729 -72.3926 l-2.96729 -76.4063 Lf*U*u0 D3.90967 -80.0283 m3.90967 -71.8633 L4.49609 -71.8633 L4.49609 -80.0283 l3.90967 -80.0283 Lf*U*u12.0742 -79.499 m12.0742 -80.0283 L6.63525 -80.0283 L6.63525 -71.8633 L11.9707 -71.8633 L11.9707 -72.3926 L7.22168 -72.3926 L7.22168 -75.6006 L11.373 -75.6006 L11.373 -76.1064 L7.22168 -76.1064 L7.22168 -79.499 l12.0742 -79.499 Lf*U*u19.6875 -77.9121 m19.6875 -78.2109 19.6299 -78.4893 19.5146 -78.7461 c19.4004 -79.0029 19.2432 -79.2275 19.0439 -79.4189 c18.8438 -79.6104 18.6104 -79.7598 18.3418 -79.8672 c18.0732 -79.9746 17.79 -80.0283 17.4912 -80.0283 c13.6729 -80.0283 L13.6729 -71.8633 L17.4795 -71.8633 L17.7627 -71.8633 18.0195 -71.9248 18.25 -72.0469 c18.4805 -72.1699 18.6758 -72.3291 18.8369 -72.5244 c18.9971 -72.7197 19.1221 -72.9424 19.21 -73.1914 c19.2979 -73.4404 19.3428 -73.6914 19.3428 -73.9443 c19.3428 -74.3584 19.2393 -74.7383 19.0322 -75.083 c18.8252 -75.4287 18.5371 -75.6816 18.1699 -75.8428 c18.6367 -75.9805 19.0068 -76.2393 19.2793 -76.6182 c19.5518 -76.998 19.6875 -77.4297 19.6875 -77.9121 cf1 D14.2598 -72.3926 m14.2598 -75.6582 L17.25 -75.6582 L17.4717 -75.6582 17.6748 -75.6123 17.8594 -75.5205 c18.043 -75.4287 18.2021 -75.3076 18.3359 -75.1582 c18.4707 -75.0088 18.5762 -74.834 18.6523 -74.6348 c18.7295 -74.4355 18.7676 -74.2324 18.7676 -74.0254 c18.7676 -73.8027 18.7314 -73.5938 18.6582 -73.3984 c18.585 -73.2031 18.4854 -73.0303 18.3594 -72.8809 c18.2324 -72.7314 18.0811 -72.6133 17.9053 -72.5244 c17.7285 -72.4365 17.5332 -72.3926 17.3184 -72.3926 c14.2598 -72.3926 Lf19.1006 -77.832 m19.1006 -77.6172 19.0625 -77.4082 18.9863 -77.2051 c18.9092 -77.002 18.8018 -76.8223 18.6641 -76.665 c18.5264 -76.5078 18.3633 -76.3828 18.1748 -76.291 c17.9873 -76.1992 17.7861 -76.1523 17.5713 -76.1523 c14.2598 -76.1523 L14.2598 -79.499 L17.4912 -79.499 L17.7207 -79.499 17.9336 -79.4531 18.1289 -79.3613 c18.3252 -79.2695 18.4932 -79.1445 18.6357 -78.9873 c18.7773 -78.8301 18.8896 -78.6523 18.9746 -78.4531 c19.0586 -78.2539 19.1006 -78.0469 19.1006 -77.832 cf*U*u0 D26.7256 -79.499 m26.7256 -80.0283 L21.2861 -80.0283 L21.2861 -71.8633 L26.6221 -71.8633 L26.6221 -72.3926 L21.873 -72.3926 L21.873 -75.6006 L26.0244 -75.6006 L26.0244 -76.1064 L21.873 -76.1064 L21.873 -79.499 l26.7256 -79.499 Lf*U*u28.3242 -80.0283 m28.3242 -71.8633 L31.7168 -71.8633 L32.0615 -71.8633 32.3799 -71.9365 32.6709 -72.082 c32.9629 -72.2275 33.2139 -72.4209 33.4248 -72.6621 c33.6357 -72.9043 33.7998 -73.1768 33.9189 -73.4795 c34.0381 -73.7822 34.0977 -74.0869 34.0977 -74.3936 c34.0977 -74.6924 34.0518 -74.9814 33.959 -75.2617 c33.8672 -75.542 33.7373 -75.793 33.5684 -76.0146 c33.3994 -76.2373 33.1963 -76.4209 32.959 -76.5664 c32.7207 -76.7129 32.46 -76.8086 32.1768 -76.8545 c34.2119 -80.0283 L33.5342 -80.0283 L31.5557 -76.9463 L28.9111 -76.9463 L28.9111 -80.0283 l28.3242 -80.0283 Lf1 D28.9111 -76.4063 m31.7744 -76.4063 L32.0352 -76.4063 32.2725 -76.3486 32.4873 -76.2334 c32.7021 -76.1182 32.8857 -75.9668 33.0391 -75.7793 c33.1924 -75.5908 33.3096 -75.377 33.3896 -75.1348 c33.4707 -74.8936 33.5107 -74.6465 33.5107 -74.3936 c33.5107 -74.1328 33.4629 -73.8818 33.3672 -73.6396 c33.2715 -73.3984 33.1406 -73.1855 32.9766 -73.002 c32.8115 -72.8174 32.6201 -72.6699 32.4014 -72.5586 c32.1826 -72.4482 31.9473 -72.3926 31.6943 -72.3926 c28.9111 -72.3926 l28.9111 -76.4063 Lf*U*u0 D38.2373 -71.8633 m38.7432 -71.8633 L42.1934 -80.0283 L41.5723 -80.0283 L40.4336 -77.3369 L36.5352 -77.3369 L35.3975 -80.0283 L34.7646 -80.0283 l38.2373 -71.8633 Lf1 D40.2734 -76.8545 m38.4902 -72.5762 L36.6738 -76.8545 l40.2734 -76.8545 Lf*U*u0 D48.3457 -72.3926 m45.3555 -72.3926 L45.3555 -80.0283 L44.7695 -80.0283 L44.7695 -72.3926 L41.7793 -72.3926 L41.7793 -71.8633 L48.3457 -71.8633 l48.3457 -72.3926 Lf*U*u52.8877 -79.5449 m53.4404 -79.5449 53.8984 -79.4414 54.2627 -79.2344 c54.626 -79.0273 54.9141 -78.7559 55.125 -78.418 c55.3359 -78.0811 55.4854 -77.6982 55.5732 -77.2686 c55.6611 -76.8389 55.7051 -76.4063 55.7051 -75.9688 c55.7051 -71.8633 L56.292 -71.8633 L56.292 -75.9688 L56.292 -76.5137 56.2324 -77.0342 56.1133 -77.5332 c55.9951 -78.0313 55.8018 -78.4697 55.5332 -78.8496 c55.2646 -79.2295 54.916 -79.5303 54.4863 -79.752 c54.0566 -79.9746 53.5283 -80.0859 52.8994 -80.0859 c52.248 -80.0859 51.7031 -79.9688 51.2666 -79.7354 c50.8291 -79.501 50.4785 -79.1904 50.2139 -78.8037 c49.9502 -78.417 49.7617 -77.9775 49.6504 -77.4873 c49.5391 -76.9961 49.4844 -76.4902 49.4844 -75.9688 c49.4844 -71.8633 L50.0703 -71.8633 L50.0703 -75.9688 L50.0703 -76.4209 50.1143 -76.8623 50.2031 -77.291 c50.291 -77.7207 50.4443 -78.1025 50.6631 -78.4355 c50.8809 -78.7695 51.1709 -79.0371 51.5313 -79.2402 c51.8916 -79.4434 52.3438 -79.5449 52.8877 -79.5449 cf*U*u58.8906 -72.9678 m58.8906 -80.0283 L58.3037 -80.0283 L58.3037 -71.8633 L58.752 -71.8633 L64.4795 -79.0508 L64.4795 -71.8633 L65.0654 -71.8633 L65.0654 -80.0283 L64.5254 -80.0283 l58.8906 -72.9678 Lf*U*u73.208 -78.752 m72.418 -79.6416 71.502 -80.0859 70.46 -80.0859 c69.9072 -80.0859 69.3955 -79.9668 68.9238 -79.7295 c68.4531 -79.4922 68.0479 -79.1777 67.7109 -78.7861 c67.374 -78.3955 67.1094 -77.9512 66.918 -77.4521 c66.7256 -76.9541 66.6299 -76.4482 66.6299 -75.9346 c66.6299 -75.3975 66.7236 -74.8799 66.9121 -74.3818 c67.0996 -73.8838 67.3604 -73.4424 67.6934 -73.0596 c68.0273 -72.6758 68.4238 -72.3711 68.8838 -72.1455 c69.3438 -71.9189 69.8457 -71.8057 70.3906 -71.8057 c70.7969 -71.8057 71.1631 -71.8496 71.4893 -71.9385 c71.8145 -72.0264 72.1055 -72.1494 72.3623 -72.3057 c72.6191 -72.4629 72.8418 -72.6514 73.0293 -72.8691 c73.2178 -73.0879 73.377 -73.3281 73.5068 -73.5879 c73.0244 -73.876 L72.748 -73.3389 72.3818 -72.9502 71.9258 -72.709 c71.4697 -72.4668 70.9541 -72.3467 70.3789 -72.3467 c69.8965 -72.3467 69.459 -72.4502 69.0684 -72.6572 c68.6768 -72.8643 68.3438 -73.1357 68.0674 -73.4736 c67.792 -73.8105 67.5811 -74.1943 67.4346 -74.623 c67.2891 -75.0527 67.2168 -75.4932 67.2168 -75.9463 c67.2168 -76.4287 67.3008 -76.8867 67.4697 -77.3203 c67.6377 -77.7529 67.8701 -78.1348 68.165 -78.4639 c68.46 -78.7939 68.8076 -79.0566 69.2061 -79.252 c69.6045 -79.4473 70.0342 -79.5449 70.4941 -79.5449 c70.9922 -79.5449 71.4658 -79.4307 71.9141 -79.2002 c72.3623 -78.9707 72.7939 -78.6064 73.208 -78.1074 c73.208 -76.5322 L71.3564 -76.5322 L71.3564 -76.0605 L73.7139 -76.0605 L73.7139 -80.0283 L73.208 -80.0283 l73.208 -78.752 Lf*UU%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI3 /terminate get exec
Adobe_pattern_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF